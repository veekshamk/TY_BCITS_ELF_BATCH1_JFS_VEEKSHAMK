package com.bcits.springmvc.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.SessionAttribute;

import com.bcits.springmvc.crud.operation.EmployeeDAO;
import com.bcits.springmvc.crud.operation.EmployeeImpl;
import com.bcits.springmvc.crud.operation.EmployeeInfoBean;
import com.bcits.springmvc.service.EmployeeService;

@Controller
public class EmployeeController {
	
	@Autowired
	private EmployeeService service;
	
	@GetMapping("/login")
	public String displayLoginForm() {
		
		return "empLoginForm";
	}
	
	@PostMapping("/login")
	public String authenticate(int empId, String password, HttpServletRequest req, ModelMap modelMap) {
		EmployeeInfoBean employeeInfoBean=service.authenticate(empId, password);
		
		if(employeeInfoBean!=null) {
			//Valid Credentials
			HttpSession session=req.getSession(true);
			session.setAttribute("loggedInEmpInfo", employeeInfoBean);
			return "employeeHome";
		}else {
			//Invalid Credentials
			modelMap.addAttribute("errMsg", "Invalid Credentials!....");
			return "empLoginForm";
		}
	}
	
	@GetMapping("/searchEmp")
	public String displaySearchEmployeeForm(HttpSession session, ModelMap modelMap) {
		
		if(session.isNew()) {
			//user Not logged In
			session.invalidate();
			
			modelMap.addAttribute("errMsg", "Please Login First!!...");
			return "empLoginForm";
		}else {
			//user already logged In
			return "searchEmpForm";
		}
	}
	
	@GetMapping("/search")
	public String searchEmployee(int empId, HttpSession session, ModelMap modelMap) {
		
		if(session.getAttribute("loggedInEmpInfo")!=null) {
			//Valid Session
			
			
			EmployeeInfoBean employeeInfoBean=service.getEmployee(empId);
			
			if(employeeInfoBean!=null) {
				modelMap.addAttribute("employeeInfoBean", employeeInfoBean);
			}else {
				modelMap.addAttribute("errMsg", "Employee ID Not Found!...");
			}
			return "searchEmpForm";
		}else {
			//Invalid Session
			modelMap.addAttribute("errMsg", "Please Login First!...");
			return "empLoginForm";
		}
	}
	
	@GetMapping("/deleteEmpForm")
	public String displayDeleteEmployeeForm(@SessionAttribute(name="loggedInEmpInfo", required=false)  
						EmployeeInfoBean employeeInfoBean, ModelMap modelMap) {
		
		if(employeeInfoBean!=null) {
			//Valid session
			return "deleteForm";
		}else {
			//Invalid session
			modelMap.addAttribute("errMsg", "Please Login First!...");
			return "empLoginForm";
		}
	}
	
	
	@GetMapping("/delete")
	public String deleteEmployee(@SessionAttribute(name="loggedInEmpInfo", required=false)
						EmployeeInfoBean employeeInfoBean,int empId, ModelMap modelMap) {
		
		if(employeeInfoBean!=null) {
			//Valid session
			if(service.deleteEmployee(empId)) {
				modelMap.addAttribute("msg", "Employee Record Deleted Successfully....");
			}else {
				modelMap.addAttribute("errMsg", "Employee ID not Found!...");
				
			}
			return "deleteEmpForm";
		}else {
			//Invalid session
			modelMap.addAttribute("errMsg", "Please Login First!...");
			return "empLoginForm";
		}
	}

	
		@GetMapping
		public String logout(HttpSession session, ModelMap modelMap) {
			
			session.invalidate();
			modelMap.addAttribute("errMsg", "You are Successfully Logged Out");
			
			return "empLoginForm";
		}
}
